/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt local connectivty modules.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\ingroup technology-apis
\title Qt Bluetooth Module
\page qtbluetooth-overview.html
\brief The Bluetooth API enables connectivity with other Bluetooth enabled devices.

\tableofcontents

\section1 Overview

Bluetooth is a short-range (less than 100 meters) wireless
technology. It has a reasonably high data transfer rate of 2.1 Mbit/s, which
makes it ideal for transfering data between devices.

\section1 Introduction

The Bluetooth API provides classes for controlling the local Bluetooth device,
discovering devices in the local vicinity, discovering services provided by
those devices, publishing services and both server and client sockets for
L2CAP and RFCOMM protocols.

\section1 Overview

Bluetooth connectivity is based on basic device management like scanning for
devices and gathering informations about them. On top of that, there are a
number of profiles which enable a certain specified interaction type on
the Bluetooth connection. The Qt Bluetooth API currently supports the
retrieval of local and remote device information and two profiles:
SPP for establishing a serial port connection and Obex Object Push to push
files to a remote device.

    With the Bluetooth API typical use cases are:

        \list
        \o Retrieve informations about the local Bluetooth device
        \o Scan for other Bluetooth devices in range and retrieve informations about them
        \o Connect to remote devices via a serial port emulation (SPP).
        \o Push files to remote devices (OPP).
        \endlist


    The following documentation leads you through what
    you can do, getting started, some simple examples and tutorials.

    \section1 Getting Started
    To get started with Qt Bluetooth API  see the \l{Qt Bluetooth Examples}{Examples} or check out
    the \l{Bluetooth QML API}{QML} and \l{Bluetooth C++ API}{C++} API's with their "Getting started" sections.

    \section2 QML API

    There are a number of QML Elements available in the QtBluetooth API.

    \list
        \o \l {Bluetooth QML API}{Bluetooth QML API}
    \endlist

    \section2 C++ Bluetooth API

    The C++ Bluetooth API requires gives a bit more flexibility on how
    to interact with remote devices.

    \list
        \o \l {Bluetooth C++ API} {Bluetooth C++ API}.
    \endlist

*/
